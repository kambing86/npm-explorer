{"version":3,"file":"static/js/986.63a9b6c0.chunk.js","mappings":"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","sources":["hooks/helpers/useStateSimple.ts","hooks/helpers/useObservable.ts","utils/getPackageInfo.ts","utils/semverCompare.ts","observables/fetchPackage.ts","observables/getDependencies.ts","observables/operators/distinctExpand.ts","hooks/helpers/usePromiseWithSuspense.ts","components/ReactVersion.tsx","../node_modules/.pnpm/@mui+material@5.10.8_ikcgkdnp4bn3rgptamntbhbo7e/node_modules/@mui/material/esm/Button/buttonClasses.js","../node_modules/.pnpm/@mui+material@5.10.8_ikcgkdnp4bn3rgptamntbhbo7e/node_modules/@mui/material/esm/ButtonGroup/ButtonGroupContext.js","../node_modules/.pnpm/@mui+material@5.10.8_ikcgkdnp4bn3rgptamntbhbo7e/node_modules/@mui/material/esm/Button/Button.js","../node_modules/.pnpm/rxjs@7.5.7/node_modules/rxjs/src/internal/operators/concatAll.ts","../node_modules/.pnpm/rxjs@7.5.7/node_modules/rxjs/src/internal/operators/mergeAll.ts","../node_modules/.pnpm/rxjs@7.5.7/node_modules/rxjs/src/internal/operators/delayWhen.ts","../node_modules/.pnpm/rxjs@7.5.7/node_modules/rxjs/src/internal/observable/concat.ts","../node_modules/.pnpm/rxjs@7.5.7/node_modules/rxjs/src/internal/operators/ignoreElements.ts","../node_modules/.pnpm/rxjs@7.5.7/node_modules/rxjs/src/internal/operators/mapTo.ts","observables/queryPackage.ts","../node_modules/.pnpm/rxjs@7.5.7/node_modules/rxjs/src/internal/operators/delay.ts","components/search/SearchInput.tsx","components/search/useSearch.ts","components/search/index.ts","views/Search.tsx"],"sourcesContent":["import { useReducer } from \"react\";\n\n/*\nthis is a helper hook that act similar to setState in React\n*/\n\nfunction reducer<T>(currentState: T, newState: Partial<T>) {\n  return {\n    ...currentState,\n    ...newState,\n  };\n}\n\nexport default function useStateSimple<T>(initialState: () => T) {\n  return useReducer<React.Reducer<T, Partial<T>>, null>(\n    reducer,\n    null,\n    initialState,\n  );\n}\n","import { useState } from \"react\";\nimport { Observable } from \"rxjs\";\nimport { useEffectOnce } from \"./useEffectOnce\";\nimport useStateSimple from \"./useStateSimple\";\n\n/*\na helper hook to observe an Observable\n*/\n\ninterface ObserverState<ReturnData> {\n  readonly data?: ReturnData;\n  readonly error?: Error;\n  readonly completed: boolean;\n}\n\nfunction getInitialState<ReturnData>(): ObserverState<ReturnData> {\n  return {\n    data: undefined,\n    error: undefined,\n    completed: false,\n  };\n}\n\nexport default function useObservable<ReturnData>(\n  initialObservable?: Observable<ReturnData> | (() => Observable<ReturnData>),\n): [\n  ObserverState<ReturnData>,\n  React.Dispatch<React.SetStateAction<Observable<ReturnData>>>,\n] {\n  const [observable, setObservable] = useState<\n    Observable<ReturnData> | undefined\n  >(initialObservable);\n  const [state, setState] =\n    useStateSimple<ObserverState<ReturnData>>(getInitialState);\n  useEffectOnce(() => {\n    if (!observable) {\n      return;\n    }\n    const subscription = observable.subscribe({\n      next(data) {\n        setState({ data });\n      },\n      error(error: Error) {\n        setState({ error });\n      },\n      complete() {\n        setState({ completed: true });\n      },\n    });\n    return () => {\n      setState(getInitialState());\n      subscription.unsubscribe();\n    };\n  }, [observable, setState]);\n\n  return [\n    state,\n    setObservable as React.Dispatch<\n      React.SetStateAction<Observable<ReturnData>>\n    >,\n  ];\n}\n","export const getPackageInfo = (packageString: string) => {\n  const lastSeperatorIndex = packageString.lastIndexOf(\"@\");\n  const packageName = packageString.substring(0, lastSeperatorIndex);\n  const packageVersionRange = packageString\n    .substring(lastSeperatorIndex + 1)\n    // remove invalid character \",\" in range\n    .replace(/,/g, \"\");\n  return {\n    packageName,\n    packageVersionRange,\n  };\n};\n","// from semver-compare\nexport function semverCompare(a: string, b: string) {\n  const pa = a.split(\".\");\n  const pb = b.split(\".\");\n  for (let i = 0; i < 3; i++) {\n    const na = Number(pa[i]);\n    const nb = Number(pb[i]);\n    if (na > nb) return 1;\n    if (nb > na) return -1;\n    if (!isNaN(na) && isNaN(nb)) return 1;\n    if (isNaN(na) && !isNaN(nb)) return -1;\n  }\n  return 0;\n}\n","import { Observable } from \"rxjs\";\nimport { fromFetch } from \"rxjs/fetch\";\nimport { finalize, mergeMap, share } from \"rxjs/operators\";\n\nconst registryUrl = \"https://npm-proxy.glitch.me/registry/\";\n// backup url\n// const registryUrl = \"https://registry.npmjs.cf/\";\n\ninterface PackageMetaData {\n  name: string;\n  dependencies?: {\n    [key: string]: string;\n  };\n}\n\ninterface AllVersionsPackageMetaData {\n  \"dist-tags\": {\n    [key: string]: string;\n  };\n  versions: {\n    [key: string]: PackageMetaData;\n  };\n}\n\nexport type FetchResult = PackageMetaData | AllVersionsPackageMetaData;\n\nconst registryCache: { [key: string]: Observable<FetchResult> } = {};\n\nexport function isAllVersionPackageMetaData(\n  result: FetchResult,\n): result is AllVersionsPackageMetaData {\n  return Boolean((result as AllVersionsPackageMetaData).versions);\n}\n\n// will get from cache and share the same Observable if still in fetching\nconst fetchPackage = (packageQuery: string): Observable<FetchResult> => {\n  let cache = registryCache[packageQuery];\n  if (!cache) {\n    cache = registryCache[packageQuery] = fromFetch(\n      `${registryUrl}${packageQuery}`,\n    ).pipe(\n      mergeMap((res: Response) => res.json()),\n      finalize(() => {\n        delete registryCache[packageQuery];\n      }),\n      share(),\n    );\n  }\n  return cache;\n};\n\nexport default fetchPackage;\n","import { firstValueFrom, from, of } from \"rxjs\";\nimport { distinct, map, mergeMap, retry, scan, take } from \"rxjs/operators\";\nimport maxSatisfying from \"semver/ranges/max-satisfying\";\nimport { getPackageInfo } from \"utils/getPackageInfo\";\nimport { semverCompare } from \"utils/semverCompare\";\nimport fetchPackage, {\n  FetchResult,\n  isAllVersionPackageMetaData,\n} from \"./fetchPackage\";\nimport { distinctExpand } from \"./operators\";\n\nconst DEPENDENCIES_FIELD = \"dependencies\";\nconst DISTRIBUTION_TAGS = \"dist-tags\";\nconst LATEST_TAG = \"latest\";\n\n// convert dependencies Object to Set with `package@version` format\nconst getDependenciesInSet = (dependencies?: { [key: string]: string }) => {\n  const results = new Set<string>();\n  if (dependencies == null) {\n    return results;\n  }\n  for (const [key, value] of Object.entries(dependencies)) {\n    results.add(`${key}@${value}`);\n  }\n  return results;\n};\n\n// Observable to get package data from registry cache or online registry\nconst retryFetchPackage$ = (\n  packageName: string,\n  packageVersionRange?: string,\n) =>\n  // get all versions if packageVersion exists, if not just get latest\n  of(\n    `${packageName}${\n      // check if packageName has \"/\" eg. @angular/core\n      packageVersionRange ? `` : `/${LATEST_TAG}`\n    }`,\n  ).pipe(\n    mergeMap(fetchPackage),\n    // retry 2 times if fail\n    retry({\n      count: 2,\n      resetOnSuccess: true,\n    }),\n  );\n\n// use semver with packageVersionRange to get the max satisfying version\n// if there is no such version, use latest tag version\n// then use that version to get the correct dependencies\nconst getDependenciesFromFetchResult =\n  (packageName: string, packageVersionRange?: string) =>\n  (packageData: FetchResult) => {\n    if (isAllVersionPackageMetaData(packageData)) {\n      if (packageVersionRange) {\n        const maxVersion = maxSatisfying(\n          Object.keys(packageData.versions),\n          packageVersionRange,\n        );\n        if (maxVersion) {\n          return getDependenciesInSet(\n            packageData.versions[maxVersion][DEPENDENCIES_FIELD],\n          );\n        }\n        // eslint-disable-next-line no-console\n        console.warn(\n          `no such version ${packageVersionRange} for ${packageName}, use latest tag`,\n        );\n      }\n      const latestVersion = packageData[DISTRIBUTION_TAGS][LATEST_TAG];\n      const latestVersionMeta = packageData.versions[latestVersion];\n      if (latestVersionMeta) {\n        return getDependenciesInSet(latestVersionMeta[DEPENDENCIES_FIELD]);\n      }\n      console.warn(`no latest version for ${packageName}`); // eslint-disable-line no-console\n      return new Set<string>();\n    }\n    return getDependenciesInSet(packageData[DEPENDENCIES_FIELD]);\n  };\n\n// Observable that returns all the dependencies for one package in `package@version` format\nconst getDependencies$ = (packageName: string, packageVersionRange?: string) =>\n  retryFetchPackage$(packageName, packageVersionRange).pipe(\n    map(getDependenciesFromFetchResult(packageName, packageVersionRange)),\n    // convert from Set to Stream\n    mergeMap((dependenciesInSet) => from(dependenciesInSet)),\n  );\n\nconst getMaxVersionFromFetchResult =\n  (packageName: string, packageVersionRange: string) =>\n  (packageData: FetchResult) => {\n    if (isAllVersionPackageMetaData(packageData)) {\n      const maxVersion =\n        maxSatisfying(Object.keys(packageData.versions), packageVersionRange) ||\n        packageVersionRange;\n      return `${packageName}@${maxVersion}`;\n    }\n    return `${packageName}@${packageVersionRange}`;\n  };\n\n// Observable that get all dependencies for the package recursively\nexport const getAllDependencies$ = (\n  packageString: string,\n  showDifferentVersion: boolean,\n  concurrency: number,\n  packageVersion?: string,\n) => {\n  return getDependencies$(packageString, packageVersion).pipe(\n    // get the dependencies of dependency, with concurrency\n    distinctExpand((dependency) => {\n      const { packageName, packageVersionRange } = getPackageInfo(dependency);\n      return getDependencies$(packageName, packageVersionRange);\n    }, concurrency),\n    // get the version number based on showDifferentVersion\n    mergeMap((dependency) => {\n      const { packageName, packageVersionRange } = getPackageInfo(dependency);\n      if (!showDifferentVersion) {\n        return of(packageName);\n      }\n      return retryFetchPackage$(packageName, packageVersionRange).pipe(\n        map(getMaxVersionFromFetchResult(packageName, packageVersionRange)),\n      );\n    }, concurrency),\n    // only show distinct value\n    distinct(),\n    // get maximum 1000 packages, one good example is bloater\n    take(1000),\n    scan((acc: string[], value: string) => [...acc, value], []),\n    map((value) => value.sort()),\n  );\n};\n\nexport const getAllVersions$ = (packageString: string) => {\n  return retryFetchPackage$(packageString, \"all\").pipe(\n    map((packageData) => {\n      if (isAllVersionPackageMetaData(packageData)) {\n        return {\n          versions: Object.keys(packageData.versions).sort(semverCompare),\n          latest: packageData[DISTRIBUTION_TAGS][LATEST_TAG],\n        } as PackageVersionInfo;\n      }\n      throw new Error(\"couldn't find all versions package.json\");\n    }),\n  );\n};\n\nexport const getAllVersionsAsync = (packageString: string) => {\n  return firstValueFrom(getAllVersions$(packageString));\n};\n","import { EMPTY, ObservableInput, SchedulerLike } from \"rxjs\";\nimport { expand } from \"rxjs/operators\";\n\n// custom operator that only expand if the value is distinct from previous values\nexport const distinctExpand = <T>(\n  fn: (value: T) => ObservableInput<T>,\n  concurrent?: number,\n  scheduler?: SchedulerLike,\n) => {\n  const set = new Set<T>();\n  return expand(\n    (value: T) => {\n      if (set.has(value)) {\n        return EMPTY;\n      }\n      set.add(value);\n      return fn(value);\n    },\n    concurrent,\n    scheduler,\n  );\n};\n","import { useRef, useState } from \"react\";\nimport { useEffectOnce } from \"./useEffectOnce\";\n\n/*\na helper hook to allow Suspense to capture the promise\n*/\n\ninterface PromiseState<ReturnData, ErrorThrown> {\n  readonly data?: ReturnData;\n  readonly error?: ErrorThrown;\n  readonly init: boolean;\n}\n\nfunction getInitialState<ReturnData, ErrorThrown>(): PromiseState<\n  ReturnData,\n  ErrorThrown\n> {\n  return {\n    init: false,\n  };\n}\n\nexport default function usePromiseWithSuspense<ReturnData, ErrorThrown = Error>(\n  initialPromise?: () => Promise<ReturnData>,\n): [\n  PromiseState<ReturnData, ErrorThrown>,\n  React.Dispatch<React.SetStateAction<Promise<ReturnData>>>,\n] {\n  const [promise, setPromise] = useState<Promise<ReturnData> | undefined>(\n    initialPromise,\n  );\n  const [state, setState] =\n    useState<PromiseState<ReturnData, ErrorThrown>>(getInitialState);\n  const loading = useRef(false);\n  const [suspensePromise, setSuspensePromise] = useState<Promise<void> | null>(\n    null,\n  );\n  useEffectOnce(() => {\n    if (!promise) {\n      return;\n    }\n    setState({ init: true });\n    let cleanup = false;\n    loading.current = true;\n    setSuspensePromise(\n      new Promise((resolve) => {\n        promise.then(\n          (data: ReturnData) => {\n            if (!cleanup) {\n              loading.current = false;\n              setState((val) => ({ ...val, data }));\n            }\n            resolve();\n          },\n          (error: ErrorThrown) => {\n            if (!cleanup) {\n              loading.current = false;\n              setState((val) => ({ ...val, error }));\n            }\n            resolve();\n          },\n        );\n      }),\n    );\n    return () => {\n      cleanup = true;\n      loading.current = false;\n      setSuspensePromise(null);\n      setState(getInitialState);\n    };\n  }, [promise]);\n\n  if (loading.current && suspensePromise) {\n    throw suspensePromise;\n  }\n\n  return [\n    state,\n    setPromise as React.Dispatch<React.SetStateAction<Promise<ReturnData>>>,\n  ];\n}\n","import usePromiseWithSuspense from \"hooks/helpers/usePromiseWithSuspense\";\nimport { getAllVersionsAsync } from \"observables/getDependencies\";\nimport { memo, version } from \"react\";\n\nfunction ReactVersionContent() {\n  const [reactPackages] = usePromiseWithSuspense(() =>\n    getAllVersionsAsync(\"react\"),\n  );\n  return (\n    <>\n      <div>React</div>\n      <div>latest stable version: {reactPackages.data?.latest}</div>\n      <div>using version: {version}</div>\n    </>\n  );\n}\n\nconst ReactVersion = () => (\n  <div className=\"flex-grow-1 d-flex flex-column justify-content-end align-self-end align-items-end\">\n    <ReactVersionContent />\n  </div>\n);\n\nexport default memo(ReactVersion);\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiButton', slot);\n}\nconst buttonClasses = generateUtilityClasses('MuiButton', ['root', 'text', 'textInherit', 'textPrimary', 'textSecondary', 'textSuccess', 'textError', 'textInfo', 'textWarning', 'outlined', 'outlinedInherit', 'outlinedPrimary', 'outlinedSecondary', 'outlinedSuccess', 'outlinedError', 'outlinedInfo', 'outlinedWarning', 'contained', 'containedInherit', 'containedPrimary', 'containedSecondary', 'containedSuccess', 'containedError', 'containedInfo', 'containedWarning', 'disableElevation', 'focusVisible', 'disabled', 'colorInherit', 'textSizeSmall', 'textSizeMedium', 'textSizeLarge', 'outlinedSizeSmall', 'outlinedSizeMedium', 'outlinedSizeLarge', 'containedSizeSmall', 'containedSizeMedium', 'containedSizeLarge', 'sizeMedium', 'sizeSmall', 'sizeLarge', 'fullWidth', 'startIcon', 'endIcon', 'iconSizeSmall', 'iconSizeMedium', 'iconSizeLarge']);\nexport default buttonClasses;","import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst ButtonGroupContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ButtonGroupContext.displayName = 'ButtonGroupContext';\n}\n\nexport default ButtonGroupContext;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"color\", \"component\", \"className\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { internal_resolveProps as resolveProps } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport buttonClasses, { getButtonUtilityClass } from './buttonClasses';\nimport ButtonGroupContext from '../ButtonGroup/ButtonGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    disableElevation,\n    fullWidth,\n    size,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `${variant}${capitalize(color)}`, `size${capitalize(size)}`, `${variant}Size${capitalize(size)}`, color === 'inherit' && 'colorInherit', disableElevation && 'disableElevation', fullWidth && 'fullWidth'],\n    label: ['label'],\n    startIcon: ['startIcon', `iconSize${capitalize(size)}`],\n    endIcon: ['endIcon', `iconSize${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst commonIconStyles = ownerState => _extends({}, ownerState.size === 'small' && {\n  '& > *:nth-of-type(1)': {\n    fontSize: 18\n  }\n}, ownerState.size === 'medium' && {\n  '& > *:nth-of-type(1)': {\n    fontSize: 20\n  }\n}, ownerState.size === 'large' && {\n  '& > *:nth-of-type(1)': {\n    fontSize: 22\n  }\n});\n\nconst ButtonRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color)}`], styles[`size${capitalize(ownerState.size)}`], styles[`${ownerState.variant}Size${capitalize(ownerState.size)}`], ownerState.color === 'inherit' && styles.colorInherit, ownerState.disableElevation && styles.disableElevation, ownerState.fullWidth && styles.fullWidth];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$palette$getCon, _theme$palette;\n\n  return _extends({}, theme.typography.button, {\n    minWidth: 64,\n    padding: '6px 16px',\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color', 'color'], {\n      duration: theme.transitions.duration.short\n    }),\n    '&:hover': _extends({\n      textDecoration: 'none',\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }, ownerState.variant === 'outlined' && ownerState.color !== 'inherit' && {\n      border: `1px solid ${(theme.vars || theme).palette[ownerState.color].main}`,\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }, ownerState.variant === 'contained' && {\n      backgroundColor: (theme.vars || theme).palette.grey.A100,\n      boxShadow: (theme.vars || theme).shadows[4],\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: (theme.vars || theme).shadows[2],\n        backgroundColor: (theme.vars || theme).palette.grey[300]\n      }\n    }, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {\n      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n      }\n    }),\n    '&:active': _extends({}, ownerState.variant === 'contained' && {\n      boxShadow: (theme.vars || theme).shadows[8]\n    }),\n    [`&.${buttonClasses.focusVisible}`]: _extends({}, ownerState.variant === 'contained' && {\n      boxShadow: (theme.vars || theme).shadows[6]\n    }),\n    [`&.${buttonClasses.disabled}`]: _extends({\n      color: (theme.vars || theme).palette.action.disabled\n    }, ownerState.variant === 'outlined' && {\n      border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`\n    }, ownerState.variant === 'outlined' && ownerState.color === 'secondary' && {\n      border: `1px solid ${(theme.vars || theme).palette.action.disabled}`\n    }, ownerState.variant === 'contained' && {\n      color: (theme.vars || theme).palette.action.disabled,\n      boxShadow: (theme.vars || theme).shadows[0],\n      backgroundColor: (theme.vars || theme).palette.action.disabledBackground\n    })\n  }, ownerState.variant === 'text' && {\n    padding: '6px 8px'\n  }, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  }, ownerState.variant === 'outlined' && {\n    padding: '5px 15px',\n    border: '1px solid currentColor'\n  }, ownerState.variant === 'outlined' && ownerState.color !== 'inherit' && {\n    color: (theme.vars || theme).palette[ownerState.color].main,\n    border: theme.vars ? `1px solid rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.5)` : `1px solid ${alpha(theme.palette[ownerState.color].main, 0.5)}`\n  }, ownerState.variant === 'contained' && {\n    color: theme.vars ? // this is safe because grey does not change between default light/dark mode\n    theme.vars.palette.text.primary : (_theme$palette$getCon = (_theme$palette = theme.palette).getContrastText) == null ? void 0 : _theme$palette$getCon.call(_theme$palette, theme.palette.grey[300]),\n    backgroundColor: (theme.vars || theme).palette.grey[300],\n    boxShadow: (theme.vars || theme).shadows[2]\n  }, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {\n    color: (theme.vars || theme).palette[ownerState.color].contrastText,\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n  }, ownerState.color === 'inherit' && {\n    color: 'inherit',\n    borderColor: 'currentColor'\n  }, ownerState.size === 'small' && ownerState.variant === 'text' && {\n    padding: '4px 5px',\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && ownerState.variant === 'text' && {\n    padding: '8px 11px',\n    fontSize: theme.typography.pxToRem(15)\n  }, ownerState.size === 'small' && ownerState.variant === 'outlined' && {\n    padding: '3px 9px',\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && ownerState.variant === 'outlined' && {\n    padding: '7px 21px',\n    fontSize: theme.typography.pxToRem(15)\n  }, ownerState.size === 'small' && ownerState.variant === 'contained' && {\n    padding: '4px 10px',\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && ownerState.variant === 'contained' && {\n    padding: '8px 22px',\n    fontSize: theme.typography.pxToRem(15)\n  }, ownerState.fullWidth && {\n    width: '100%'\n  });\n}, ({\n  ownerState\n}) => ownerState.disableElevation && {\n  boxShadow: 'none',\n  '&:hover': {\n    boxShadow: 'none'\n  },\n  [`&.${buttonClasses.focusVisible}`]: {\n    boxShadow: 'none'\n  },\n  '&:active': {\n    boxShadow: 'none'\n  },\n  [`&.${buttonClasses.disabled}`]: {\n    boxShadow: 'none'\n  }\n});\nconst ButtonStartIcon = styled('span', {\n  name: 'MuiButton',\n  slot: 'StartIcon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.startIcon, styles[`iconSize${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inherit',\n  marginRight: 8,\n  marginLeft: -4\n}, ownerState.size === 'small' && {\n  marginLeft: -2\n}, commonIconStyles(ownerState)));\nconst ButtonEndIcon = styled('span', {\n  name: 'MuiButton',\n  slot: 'EndIcon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.endIcon, styles[`iconSize${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inherit',\n  marginRight: -4,\n  marginLeft: 8\n}, ownerState.size === 'small' && {\n  marginRight: -2\n}, commonIconStyles(ownerState)));\nconst Button = /*#__PURE__*/React.forwardRef(function Button(inProps, ref) {\n  // props priority: `inProps` > `contextProps` > `themeDefaultProps`\n  const contextProps = React.useContext(ButtonGroupContext);\n  const resolvedProps = resolveProps(contextProps, inProps);\n  const props = useThemeProps({\n    props: resolvedProps,\n    name: 'MuiButton'\n  });\n\n  const {\n    children,\n    color = 'primary',\n    component = 'button',\n    className,\n    disabled = false,\n    disableElevation = false,\n    disableFocusRipple = false,\n    endIcon: endIconProp,\n    focusVisibleClassName,\n    fullWidth = false,\n    size = 'medium',\n    startIcon: startIconProp,\n    type,\n    variant = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    disableElevation,\n    disableFocusRipple,\n    fullWidth,\n    size,\n    type,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const startIcon = startIconProp && /*#__PURE__*/_jsx(ButtonStartIcon, {\n    className: classes.startIcon,\n    ownerState: ownerState,\n    children: startIconProp\n  });\n\n  const endIcon = endIconProp && /*#__PURE__*/_jsx(ButtonEndIcon, {\n    className: classes.endIcon,\n    ownerState: ownerState,\n    children: endIconProp\n  });\n\n  return /*#__PURE__*/_jsxs(ButtonRoot, _extends({\n    ownerState: ownerState,\n    className: clsx(contextProps.className, classes.root, className),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other, {\n    classes: classes,\n    children: [startIcon, children, endIcon]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'success', 'error', 'info', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   * @default false\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default Button;","import { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.svg)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, map, interval, take, concatAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(4)))\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaustAll}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable emitting values from all the\n * inner Observables concatenated.\n */\nexport function concatAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeAll(1);\n}\n","import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n *\n * ```ts\n * import { fromEvent, map, interval, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map(() => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n *\n * ```ts\n * import { fromEvent, map, interval, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(10)))\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Infinity] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits values coming from\n * all the inner Observables emitted by the source Observable.\n */\nexport function mergeAll<O extends ObservableInput<any>>(concurrent: number = Infinity): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeMap(identity, concurrent);\n}\n","import { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\n\n/** @deprecated The `subscriptionDelay` parameter will be removed in v8. */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => Observable<any>,\n  subscriptionDelay: Observable<any>\n): MonoTypeOperatorFunction<T>;\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<any>): MonoTypeOperatorFunction<T>;\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * ![](delayWhen.png)\n *\n * `delayWhen` operator shifts each emitted value from the source Observable by\n * a time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the value emitted from\n * the source Observable as the first argument to the `delayDurationSelector`.\n * The `delayDurationSelector` function should return an Observable, called\n * the \"duration\" Observable.\n *\n * The source value is emitted on the output Observable only when the \"duration\"\n * Observable emits ({@link guide/glossary-and-semantics#next next}s) any value.\n * Upon that, the \"duration\" Observable gets unsubscribed.\n *\n * Before RxJS V7, the {@link guide/glossary-and-semantics#complete completion}\n * of the \"duration\" Observable would have been triggering the emission of the\n * source value to the output Observable, but with RxJS V7, this is not the case\n * anymore.\n *\n * Only next notifications (from the \"duration\" Observable) trigger values from\n * the source Observable to be passed to the output Observable. If the \"duration\"\n * Observable only emits the complete notification (without next), the value\n * emitted by the source Observable will never get to the output Observable - it\n * will be swallowed. If the \"duration\" Observable errors, the error will be\n * propagated to the output Observable.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * ## Example\n *\n * Delay each click by a random amount of time, between 0 and 5 seconds\n *\n * ```ts\n * import { fromEvent, delayWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(\n *   delayWhen(() => interval(Math.random() * 5000))\n * );\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delay}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {function(value: T, index: number): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by an amount of time specified by the Observable\n * returned by `delayDurationSelector`.\n */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => Observable<any>,\n  subscriptionDelay?: Observable<any>\n): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n  }\n\n  return mergeMap((value, index) => delayDurationSelector(value, index).pipe(take(1), mapTo(value)));\n}\n","import { Observable } from '../Observable';\nimport { ObservableInputTuple, SchedulerLike } from '../types';\nimport { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function concat<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function concat<T extends readonly unknown[]>(\n  ...inputsAndScheduler: [...ObservableInputTuple<T>, SchedulerLike]\n): Observable<T[number]>;\n\n/**\n * Creates an output Observable which sequentially emits all values from the first given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n *\n * Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n *\n * ```ts\n * import { interval, take, range, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * Concatenate 3 Observables\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * Concatenate the same Observable to repeat it\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n *   .subscribe({\n *     next: value => console.log(value),\n *     complete: () => console.log('...and it is done!')\n *   });\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // '...and it is done!' also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param args Input Observables to concatenate.\n */\nexport function concat(...args: any[]): Observable<unknown> {\n  return concatAll()(from(args, popScheduler(args)));\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * ![](ignoreElements.png)\n *\n * The `ignoreElements` operator suppresses all items emitted by the source Observable,\n * but allows its termination notification (either `error` or `complete`) to pass through unchanged.\n *\n * If you do not care about the items being emitted by an Observable, but you do want to be notified\n * when it completes or when it terminates with an error, you can apply the `ignoreElements` operator\n * to the Observable, which will ensure that it will never call its observers’ `next` handlers.\n *\n * ## Example\n *\n * Ignore all `next` emissions from the source\n *\n * ```ts\n * import { of, ignoreElements } from 'rxjs';\n *\n * of('you', 'talking', 'to', 'me')\n *   .pipe(ignoreElements())\n *   .subscribe({\n *     next: word => console.log(word),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // result:\n * // 'the end'\n * ```\n *\n * @return A function that returns an empty Observable that only calls\n * `complete` or `error`, based on which one is called by the source\n * Observable.\n */\nexport function ignoreElements(): OperatorFunction<unknown, never> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, noop));\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { map } from './map';\n\n/** @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`. */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R>;\n/**\n * @deprecated Do not specify explicit type parameters. Signatures with type parameters\n * that cannot be inferred will be removed in v8. `mapTo` itself will be removed in v9,\n * use {@link map} instead: `map(() => value)`.\n * */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R>;\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * ![](mapTo.png)\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * ## Example\n *\n * Map every click to the string `'Hi'`\n *\n * ```ts\n * import { fromEvent, mapTo } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const greetings = clicks.pipe(mapTo('Hi'));\n *\n * greetings.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param value The value to map each source value to.\n * @return A function that returns an Observable that emits the given `value`\n * every time the source Observable emits.\n * @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`.\n */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R> {\n  return map(() => value);\n}\n","import { EMPTY, Observable, of } from \"rxjs\";\nimport { fromFetch } from \"rxjs/fetch\";\nimport { delay, mergeMap } from \"rxjs/operators\";\n\nconst getQueryUrl = (query: string) =>\n  `https://npm-proxy.glitch.me/search/suggestions?q=${query}`;\n\ninterface PackageQuery {\n  name: string;\n}\n\nexport type QueryResult = PackageQuery[];\n\nexport const getQueryObservable$ = (\n  query: string,\n): Observable<PackageQuery[]> => {\n  if (query === \"\") {\n    return EMPTY;\n  }\n  return of(query).pipe(\n    delay(400),\n    mergeMap((q) => fromFetch(getQueryUrl(q))),\n    mergeMap((res) => res.json() as Promise<PackageQuery[]>),\n  );\n};\n","import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.svg)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n *\n * Delay each click by one second\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delayWhen}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {number|Date} due The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the time-shift for each item.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified timeout or Date.\n */\nexport function delay<T>(due: number | Date, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  const duration = timer(due, scheduler);\n  return delayWhen(() => duration);\n}\n","import Autocomplete, {\n  AutocompleteRenderInputParams,\n} from \"@mui/material/Autocomplete\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Icon from \"@mui/material/Icon\";\nimport TextField from \"@mui/material/TextField\";\nimport {\n  KeyboardEvent,\n  memo,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { RootState } from \"store\";\nimport { searchActions } from \"store/slices/search.slice\";\nimport useSearch from \"./useSearch\";\n\nconst SearchInput = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const { searchState, setSearchString, searchHistory } = useSearch();\n\n  const packageString = useSelector(\n    (state: RootState) => state.search.packageString,\n  );\n\n  // auto focus input when search history is not empty\n  const inputRef = useRef<HTMLInputElement>(null);\n  const searchHistoryRef = useRef(searchHistory);\n  useEffect(() => {\n    if (searchHistoryRef.current !== \"\") {\n      inputRef.current?.focus();\n    }\n  }, []);\n\n  const onInputChangeHandler = useCallback(\n    (_event: unknown, value: string, reason: string) => {\n      if (reason === \"input\") {\n        setSearchString(value);\n      }\n    },\n    [setSearchString],\n  );\n\n  const onChangeHandler = useCallback(\n    (_event: unknown, option: string | OptionType | null) => {\n      if (option == null) {\n        dispatch(searchActions.setPackageString(\"\"));\n      } else if (typeof option === \"string\") {\n        dispatch(searchActions.setPackageString(option));\n      } else {\n        dispatch(searchActions.setPackageString(option.value));\n      }\n    },\n    [dispatch],\n  );\n  const onSearchHandler = useCallback(() => {\n    dispatch(searchActions.setHistory(packageString));\n    navigate(`/package/${encodeURIComponent(packageString)}`);\n  }, [dispatch, packageString, navigate]);\n  const isMenuOpenRef = useRef(isMenuOpen);\n  isMenuOpenRef.current = isMenuOpen;\n  const onKeyDownHandler = useCallback(\n    (event: KeyboardEvent<HTMLElement>) => {\n      if (event.key === \"Enter\" && !isMenuOpenRef.current) {\n        onSearchHandler();\n        event.preventDefault();\n      }\n    },\n    [onSearchHandler],\n  );\n  const onMenuOpenHandler = useCallback(() => {\n    setIsMenuOpen(true);\n  }, [setIsMenuOpen]);\n  const onMenuCloseHandler = useCallback(() => {\n    setIsMenuOpen(false);\n  }, [setIsMenuOpen]);\n\n  const filterOptions = useCallback((options: OptionType[]) => options, []);\n  const renderInput = useCallback(\n    (params: AutocompleteRenderInputParams) => (\n      <TextField inputRef={inputRef} {...params} label=\"Search package\" />\n    ),\n    [],\n  );\n\n  return (\n    <>\n      <Box color=\"black\" sx={{ width: \"100%\" }}>\n        <Autocomplete\n          freeSolo\n          options={searchState.options}\n          loading={searchState.isLoading}\n          onInputChange={onInputChangeHandler}\n          onChange={onChangeHandler}\n          onKeyDown={onKeyDownHandler}\n          onOpen={onMenuOpenHandler}\n          onClose={onMenuCloseHandler}\n          open={isMenuOpen}\n          defaultValue={searchHistory}\n          filterOptions={filterOptions}\n          renderInput={renderInput}\n        />\n      </Box>\n      <Button\n        sx={{ marginTop: 1 }}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={onSearchHandler}\n        disabled={packageString === \"\"}\n        startIcon={<Icon>search</Icon>}\n      >\n        Search\n      </Button>\n    </>\n  );\n};\n\nexport default memo(SearchInput);\n","import useObservable from \"hooks/helpers/useObservable\";\nimport { QueryResult, getQueryObservable$ } from \"observables/queryPackage\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"store\";\n\ninterface SearchState {\n  isLoading: boolean;\n  options: OptionType[];\n  searchString: string;\n}\n\nfunction getInitialState(searchHistory: string): Readonly<SearchState> {\n  if (searchHistory !== \"\") {\n    return { isLoading: true, options: [], searchString: searchHistory };\n  }\n  return {\n    isLoading: false,\n    options: [],\n    searchString: \"\",\n  };\n}\n\nexport default function useSearch() {\n  const searchHistory = useSelector((state: RootState) => state.search.history);\n  const [searchState, setSearchState] = useState(() =>\n    getInitialState(searchHistory),\n  );\n  const [queryState, setQuery] = useObservable<QueryResult>();\n\n  // componentDidMount effect\n  // should not trigger useEffect when searchHistory changed\n  const searchHistoryRef = useRef(searchHistory);\n  useEffect(() => {\n    const searchString = searchHistoryRef.current;\n    if (searchString !== \"\") {\n      setSearchState((prevState) => ({\n        ...prevState,\n        isLoading: true,\n        options: [],\n        searchString,\n      }));\n    }\n  }, []);\n\n  // callbacks for Search component\n  const setSearchString = useCallback((value: string) => {\n    setSearchState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n      options: [],\n      searchString: value,\n    }));\n  }, []);\n\n  // check for searchString and do query\n  // triggered by componentDidMount or setSearchString\n  useEffect(() => {\n    setQuery(getQueryObservable$(searchState.searchString));\n  }, [setQuery, searchState.searchString]);\n\n  // monitor query and set search state when query is done\n  useEffect(() => {\n    const { data, completed } = queryState;\n    if (completed) {\n      if (data) {\n        setSearchState((prevState) => {\n          const allOptions: OptionType[] = data.map((packageInfo) => ({\n            label: packageInfo.name,\n            value: packageInfo.name,\n          }));\n          const { searchString } = prevState;\n          const sortedOption = [\n            ...allOptions.filter((option) => option.value === searchString),\n            ...allOptions.filter((option) => option.value !== searchString),\n          ];\n          return {\n            ...prevState,\n            isLoading: false,\n            options: sortedOption,\n          };\n        });\n      } else {\n        setSearchState((prevState) => ({\n          ...prevState,\n          isLoading: false,\n          options: [],\n        }));\n      }\n    }\n  }, [queryState]);\n\n  return {\n    searchState,\n    setSearchString,\n    searchHistory,\n  };\n}\n","import SearchInput from \"./SearchInput\";\n\nexport default SearchInput;\n","import Box from \"@mui/material/Box\";\nimport LoadingBackdrop from \"components/LoadingBackdrop\";\nimport ReactVersion from \"components/ReactVersion\";\nimport SearchInput from \"components/search\";\nimport { Suspense, memo } from \"react\";\n\nconst Search = () => {\n  return (\n    <Box\n      sx={{\n        flexGrow: 1,\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <Suspense fallback={<LoadingBackdrop loadingText=\"Starting server...\" />}>\n        <Box sx={{ flexGrow: 1 }} />\n        <SearchInput />\n        <ReactVersion />\n      </Suspense>\n    </Box>\n  );\n};\n\nexport default memo(Search);\n"],"names":["reducer","currentState","newState","getInitialState","data","undefined","error","completed","useObservable","initialObservable","initialState","useState","observable","setObservable","useReducer","state","setState","useEffectOnce","subscription","subscribe","next","complete","unsubscribe","getPackageInfo","packageString","lastSeperatorIndex","lastIndexOf","packageName","substring","packageVersionRange","replace","semverCompare","a","b","pa","split","pb","i","na","Number","nb","isNaN","registryCache","isAllVersionPackageMetaData","result","Boolean","versions","packageQuery","cache","fromFetch","pipe","mergeMap","res","json","finalize","share","LATEST_TAG","getDependenciesInSet","dependencies","results","Set","Object","entries","key","value","add","retryFetchPackage$","of","fetchPackage","retry","count","resetOnSuccess","getDependencies$","map","packageData","maxVersion","maxSatisfying","keys","console","warn","latestVersion","DISTRIBUTION_TAGS","latestVersionMeta","getDependenciesFromFetchResult","dependenciesInSet","from","getAllDependencies$","showDifferentVersion","concurrency","packageVersion","fn","concurrent","scheduler","set","expand","has","EMPTY","distinctExpand","dependency","getMaxVersionFromFetchResult","distinct","take","scan","acc","sort","getAllVersions$","latest","Error","getAllVersionsAsync","firstValueFrom","init","ReactVersionContent","initialPromise","promise","setPromise","loading","useRef","suspensePromise","setSuspensePromise","cleanup","current","Promise","resolve","then","val","usePromiseWithSuspense","reactPackages","version","ReactVersion","className","memo","getButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","React","_excluded","commonIconStyles","ownerState","_extends","size","fontSize","ButtonRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","root","variant","capitalize","color","colorInherit","disableElevation","fullWidth","_theme$palette$getCon","_theme$palette","theme","typography","button","minWidth","padding","borderRadius","vars","shape","transition","transitions","create","duration","short","textDecoration","backgroundColor","palette","text","primaryChannel","action","hoverOpacity","alpha","primary","mainChannel","main","border","grey","A100","boxShadow","shadows","dark","buttonClasses","disabled","disabledBackground","getContrastText","call","contrastText","borderColor","pxToRem","width","ButtonStartIcon","startIcon","display","marginRight","marginLeft","ButtonEndIcon","endIcon","inProps","ref","contextProps","ButtonGroupContext","resolvedProps","resolveProps","useThemeProps","children","component","disableFocusRipple","endIconProp","focusVisibleClassName","startIconProp","type","other","_objectWithoutPropertiesLoose","classes","slots","label","composedClasses","composeClasses","useUtilityClasses","_jsx","_jsxs","clsx","focusRipple","focusVisible","concatAll","identity","delayWhen","delayDurationSelector","subscriptionDelay","source","args","popScheduler","concat","operate","subscriber","createOperatorSubscriber","noop","index","mapTo","getQueryObservable$","query","due","timer","delay","q","getQueryUrl","SearchInput","dispatch","useDispatch","navigate","useNavigate","isMenuOpen","setIsMenuOpen","searchHistory","useSelector","search","history","isLoading","options","searchString","searchState","setSearchState","queryState","setQuery","searchHistoryRef","useEffect","prevState","setSearchString","useCallback","allOptions","packageInfo","sortedOption","filter","option","useSearch","inputRef","focus","onInputChangeHandler","_event","reason","onChangeHandler","searchActions","onSearchHandler","encodeURIComponent","isMenuOpenRef","onKeyDownHandler","event","preventDefault","onMenuOpenHandler","onMenuCloseHandler","filterOptions","renderInput","params","TextField","Box","sx","Autocomplete","freeSolo","onInputChange","onChange","onKeyDown","onOpen","onClose","open","defaultValue","marginTop","onClick","Icon","Search","flexGrow","flexFlow","alignItems","Suspense","fallback","LoadingBackdrop","loadingText"],"sourceRoot":""}